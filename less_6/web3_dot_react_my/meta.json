{"magicNumber":1635018093,"metadata":{"v14":{"lookup":{"types":[{"id":0,"type":{"path":["sp_core","cryypto","AccountId32"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":1,"typeName":"[u8; 32]","docs":[]}]}},"docs":[]}},{"id":1,"type":{"path":[],"params":[],"def":{"array":{"len":32,"type":2}},"docs":[]}},{"id":2,"type":{"path":[],"params":[],"def":{"primitive":"U8"},"docs":[]}},{"id":3,"type":{"path":["frame_system","AccountInfo"],"params":[{"name":"Nonce","type":4},{"name":"AccountData","type":5}],"def":{"composite":{"fields":[{"name":"nonce","type":4,"typeName":"Nonce","docs":[]},{"name":"consumers","type":4,"typeName":"RefCount","docs":[]},{"name":"providers","type":4,"typeName":"RefCount","docs":[]},{"name":"sufficients","type":4,"typeName":"RefCount","docs":[]},{"name":"data","type":5,"typeName":"AccountData","docs":[]}]}},"docs":[]}},{"id":4,"type":{"path":[],"params":[],"def":{"primitive":"U32"},"docs":[]}},{"id":5,"type":{"path":["pallet_balances","types","AccountData"],"params":[{"name":"Balance","type":6}],"def":{"composite":{"fields":[{"name":"free","type":6,"typeName":"Balance","docs":[]},{"name":"reserved","type":6,"typeName":"Balance","docs":[]},{"name":"frozen","type":6,"typeName":"Balance","docs":[]},{"name":"flags","type":7,"typeName":"ExtraFlags","docs":[]}]}},"docs":[]}},{"id":6,"type":{"path":[],"params":[],"def":{"primitive":"U128"},"docs":[]}},{"id":7,"type":{"path":["pallet_balances","types","ExtraFlags"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":6,"typeName":"u128","docs":[]}]}},"docs":[]}},{"id":8,"type":{"path":[],"params":[],"def":{"primitive":"Bool"},"docs":[]}},{"id":9,"type":{"path":["frame_support","dispatch","PerDispatchClass"],"params":[{"name":"T","type":10}],"def":{"composite":{"fields":[{"name":"normal","type":10,"typeName":"T","docs":[]},{"name":"operational","type":10,"typeName":"T","docs":[]},{"name":"mandatory","type":10,"typeName":"T","docs":[]}]}},"docs":[]}},{"id":10,"type":{"path":["sp_weights","weight_v2","Weight"],"params":[],"def":{"composite":{"fields":[{"name":"ref_time","type":11,"typeName":"u64","docs":[]},{"name":"proof_size","type":11,"typeName":"u64","docs":[]}]}},"docs":[]}},{"id":11,"type":{"path":[],"params":[],"def":{"compact":{"type":12}},"docs":[]}},{"id":12,"type":{"path":[],"params":[],"def":{"primitive":"U64"},"docs":[]}},{"id":13,"type":{"path":["primitive_types","H256"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":1,"typeName":"[u8; 32]","docs":[]}]}},"docs":[]}},{"id":14,"type":{"path":[],"params":[],"def":{"sequence":{"type":2}},"docs":[]}},{"id":15,"type":{"path":["sp_runtime","generic","digest","Digest"],"params":[],"def":{"composite":{"fields":[{"name":"logs","type":16,"typeName":"Vec<DigestItem>","docs":[]}]}},"docs":[]}},{"id":16,"type":{"path":[],"params":[],"def":{"sequence":{"type":17}},"docs":[]}},{"id":17,"type":{"path":["sp_runtime","generic","digest","DigestItem"],"params":[],"def":{"variant":{"variants":[{"name":"PreRuntime","fields":[{"name":null,"type":18,"typeName":"ConsensusEngineId","docs":[]},{"name":null,"type":14,"typeName":"Vec<u8>","docs":[]}],"index":6,"docs":[]},{"name":"Consensus","fields":[{"name":null,"type":18,"typeName":"ConsensusEngineId","docs":[]},{"name":null,"type":14,"typeName":"Vec<u8>","docs":[]}],"index":4,"docs":[]},{"name":"Seal","fields":[{"name":null,"type":18,"typeName":"ConsensusEngineId","docs":[]},{"name":null,"type":14,"typeName":"Vec<u8>","docs":[]}],"index":5,"docs":[]},{"name":"Other","fields":[{"name":null,"type":14,"typeName":"Vec<u8>","docs":[]}],"index":0,"docs":[]},{"name":"RuntimeEnvironmentUpdated","fields":[],"index":8,"docs":[]}]}},"docs":[]}},{"id":18,"type":{"path":[],"params":[],"def":{"array":{"len":4,"type":2}},"docs":[]}},{"id":19,"type":{"path":[],"params":[],"def":{"sequence":{"type":20}},"docs":[]}},{"id":20,"type":{"path":["frame_system","EventRecord"],"params":[{"name":"E","type":21},{"name":"T","type":13}],"def":{"composite":{"fields":[{"name":"phase","type":44,"typeName":"Phase","docs":[]},{"name":"event","type":21,"typeName":"E","docs":[]},{"name":"topics","type":45,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":21,"type":{"path":["node_template_runtime","RuntimeEvent"],"params":[],"def":{"variant":{"variants":[{"name":"System","fields":[{"name":null,"type":22,"typeName":"frame_system::Event<Runtime>","docs":[]}],"index":0,"docs":[]},{"name":"Grandpa","fields":[{"name":null,"type":31,"typeName":"pallet_grandpa::Event","docs":[]}],"index":3,"docs":[]},{"name":"Balances","fields":[{"name":null,"type":36,"typeName":"pallet_balances::Event<Runtime>","docs":[]}],"index":4,"docs":[]},{"name":"TransactionPayment","fields":[{"name":null,"type":38,"typeName":"pallet_transaction_payment::Event<Runtime>","docs":[]}],"index":5,"docs":[]},{"name":"Sudo","fields":[{"name":null,"type":39,"typeName":"pallet_sudo::Event<Runtime>","docs":[]}],"index":6,"docs":[]},{"name":"TemplateModule","fields":[{"name":null,"type":43,"typeName":"pallet_template::Event<Runtime>","docs":[]}],"index":7,"docs":[]}]}},"docs":[]}},{"id":22,"type":{"path":["frame_system","pallet","Event"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"ExtrinsicSuccess","fields":[{"name":"dispatch_info","type":23,"typeName":"DispatchInfo","docs":[]}],"index":0,"docs":["An extrinsic completed successfully."]},{"name":"ExtrinsicFailed","fields":[{"name":"dispatch_error","type":26,"typeName":"DispatchError","docs":[]},{"name":"dispatch_info","type":23,"typeName":"DispatchInfo","docs":[]}],"index":1,"docs":["An extrinsic failed."]},{"name":"CodeUpdated","fields":[],"index":2,"docs":["`:code` was updated."]},{"name":"NewAccount","fields":[{"name":"account","type":0,"typeName":"T::AccountId","docs":[]}],"index":3,"docs":["A new account was created."]},{"name":"KilledAccount","fields":[{"name":"account","type":0,"typeName":"T::AccountId","docs":[]}],"index":4,"docs":["An account was reaped."]},{"name":"Remarked","fields":[{"name":"sender","type":0,"typeName":"T::AccountId","docs":[]},{"name":"hash","type":13,"typeName":"T::Hash","docs":[]}],"index":5,"docs":["On on-chain remark happened."]},{"name":"UpgradeAuthorized","fields":[{"name":"code_hash","type":13,"typeName":"T::Hash","docs":[]},{"name":"check_version","type":8,"typeName":"bool","docs":[]}],"index":6,"docs":["An upgrade was authorized."]}]}},"docs":["Event for the System pallet."]}},{"id":23,"type":{"path":["frame_support","dispatch","DispatchInfo"],"params":[],"def":{"composite":{"fields":[{"name":"weight","type":10,"typeName":"Weight","docs":[]},{"name":"class","type":24,"typeName":"DispatchClass","docs":[]},{"name":"pays_fee","type":25,"typeName":"Pays","docs":[]}]}},"docs":[]}},{"id":24,"type":{"path":["frame_support","dispatch","DispatchClass"],"params":[],"def":{"variant":{"variants":[{"name":"Normal","fields":[],"index":0,"docs":[]},{"name":"Operational","fields":[],"index":1,"docs":[]},{"name":"Mandatory","fields":[],"index":2,"docs":[]}]}},"docs":[]}},{"id":25,"type":{"path":["frame_support","dispatch","Pays"],"params":[],"def":{"variant":{"variants":[{"name":"Yes","fields":[],"index":0,"docs":[]},{"name":"No","fields":[],"index":1,"docs":[]}]}},"docs":[]}},{"id":26,"type":{"path":["sp_runtime","DispatchError"],"params":[],"def":{"variant":{"variants":[{"name":"Other","fields":[],"index":0,"docs":[]},{"name":"CannotLookup","fields":[],"index":1,"docs":[]},{"name":"BadOrigin","fields":[],"index":2,"docs":[]},{"name":"Module","fields":[{"name":null,"type":27,"typeName":"ModuleError","docs":[]}],"index":3,"docs":[]},{"name":"ConsumerRemaining","fields":[],"index":4,"docs":[]},{"name":"NoProviders","fields":[],"index":5,"docs":[]},{"name":"TooManyConsumers","fields":[],"index":6,"docs":[]},{"name":"Token","fields":[{"name":null,"type":28,"typeName":"TokenError","docs":[]}],"index":7,"docs":[]},{"name":"Arithmetic","fields":[{"name":null,"type":29,"typeName":"ArithmeticError","docs":[]}],"index":8,"docs":[]},{"name":"Transactional","fields":[{"name":null,"type":30,"typeName":"TransactionalError","docs":[]}],"index":9,"docs":[]},{"name":"Exhausted","fields":[],"index":10,"docs":[]},{"name":"Corruption","fields":[],"index":11,"docs":[]},{"name":"Unavailable","fields":[],"index":12,"docs":[]},{"name":"RootNotAllowed","fields":[],"index":13,"docs":[]}]}},"docs":[]}},{"id":27,"type":{"path":["sp_runtime","ModuleError"],"params":[],"def":{"composite":{"fields":[{"name":"index","type":2,"typeName":"u8","docs":[]},{"name":"error","type":18,"typeName":"[u8; MAX_MODULE_ERROR_ENCODED_SIZE]","docs":[]}]}},"docs":[]}},{"id":28,"type":{"path":["sp_runtime","TokenError"],"params":[],"def":{"variant":{"variants":[{"name":"FundsUnavailable","fields":[],"index":0,"docs":[]},{"name":"OnlyProvider","fields":[],"index":1,"docs":[]},{"name":"BelowMinimum","fields":[],"index":2,"docs":[]},{"name":"CannotCreate","fields":[],"index":3,"docs":[]},{"name":"UnknownAsset","fields":[],"index":4,"docs":[]},{"name":"Frozen","fields":[],"index":5,"docs":[]},{"name":"Unsupported","fields":[],"index":6,"docs":[]},{"name":"CannotCreateHold","fields":[],"index":7,"docs":[]},{"name":"NotExpendable","fields":[],"index":8,"docs":[]},{"name":"Blocked","fields":[],"index":9,"docs":[]}]}},"docs":[]}},{"id":29,"type":{"path":["sp_arithmetic","ArithmeticError"],"params":[],"def":{"variant":{"variants":[{"name":"Underflow","fields":[],"index":0,"docs":[]},{"name":"Overflow","fields":[],"index":1,"docs":[]},{"name":"DivisionByZero","fields":[],"index":2,"docs":[]}]}},"docs":[]}},{"id":30,"type":{"path":["sp_runtime","TransactionalError"],"params":[],"def":{"variant":{"variants":[{"name":"LimitReached","fields":[],"index":0,"docs":[]},{"name":"NoLayer","fields":[],"index":1,"docs":[]}]}},"docs":[]}},{"id":31,"type":{"path":["pallet_grandpa","pallet","Event"],"params":[],"def":{"variant":{"variants":[{"name":"NewAuthorities","fields":[{"name":"authority_set","type":32,"typeName":"AuthorityList","docs":[]}],"index":0,"docs":["New authority set has been applied."]},{"name":"Paused","fields":[],"index":1,"docs":["Current authority set has been paused."]},{"name":"Resumed","fields":[],"index":2,"docs":["Current authority set has been resumed."]}]}},"docs":["The `Event` enum of this pallet"]}},{"id":32,"type":{"path":[],"params":[],"def":{"sequence":{"type":33}},"docs":[]}},{"id":33,"type":{"path":[],"params":[],"def":{"tuple":[34,12]},"docs":[]}},{"id":34,"type":{"path":["sp_consensus_grandpa","app","Public"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":35,"typeName":"ed25519::Public","docs":[]}]}},"docs":[]}},{"id":35,"type":{"path":["sp_core","ed25519","Public"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":1,"typeName":"[u8; 32]","docs":[]}]}},"docs":[]}},{"id":36,"type":{"path":["pallet_balances","pallet","Event"],"params":[{"name":"T","type":null},{"name":"I","type":null}],"def":{"variant":{"variants":[{"name":"Endowed","fields":[{"name":"account","type":0,"typeName":"T::AccountId","docs":[]},{"name":"free_balance","type":6,"typeName":"T::Balance","docs":[]}],"index":0,"docs":["An account was created with some free balance."]},{"name":"DustLost","fields":[{"name":"account","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":1,"docs":["An account was removed whose balance was non-zero but below ExistentialDeposit,","resulting in an outright loss."]},{"name":"Transfer","fields":[{"name":"from","type":0,"typeName":"T::AccountId","docs":[]},{"name":"to","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":2,"docs":["Transfer succeeded."]},{"name":"BalanceSet","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"free","type":6,"typeName":"T::Balance","docs":[]}],"index":3,"docs":["A balance was set by root."]},{"name":"Reserved","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":4,"docs":["Some balance was reserved (moved from free to reserved)."]},{"name":"Unreserved","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":5,"docs":["Some balance was unreserved (moved from reserved to free)."]},{"name":"ReserveRepatriated","fields":[{"name":"from","type":0,"typeName":"T::AccountId","docs":[]},{"name":"to","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]},{"name":"destination_status","type":37,"typeName":"Status","docs":[]}],"index":6,"docs":["Some balance was moved from the reserve of the first account to the second account.","Final argument indicates the destination balance type."]},{"name":"Deposit","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":7,"docs":["Some amount was deposited (e.g. for transaction fees)."]},{"name":"Withdraw","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":8,"docs":["Some amount was withdrawn from the account (e.g. for transaction fees)."]},{"name":"Slashed","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":9,"docs":["Some amount was removed from the account (e.g. for misbehavior)."]},{"name":"Minted","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":10,"docs":["Some amount was minted into an account."]},{"name":"Burned","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":11,"docs":["Some amount was burned from an account."]},{"name":"Suspended","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":12,"docs":["Some amount was suspended from an account (it can be restored later)."]},{"name":"Restored","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":13,"docs":["Some amount was restored into an account."]},{"name":"Upgraded","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]}],"index":14,"docs":["An account was upgraded."]},{"name":"Issued","fields":[{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":15,"docs":["Total issuance was increased by `amount`, creating a credit to be balanced."]},{"name":"Rescinded","fields":[{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":16,"docs":["Total issuance was decreased by `amount`, creating a debt to be balanced."]},{"name":"Locked","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":17,"docs":["Some balance was locked."]},{"name":"Unlocked","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":18,"docs":["Some balance was unlocked."]},{"name":"Frozen","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":19,"docs":["Some balance was frozen."]},{"name":"Thawed","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":20,"docs":["Some balance was thawed."]},{"name":"TotalIssuanceForced","fields":[{"name":"old","type":6,"typeName":"T::Balance","docs":[]},{"name":"new","type":6,"typeName":"T::Balance","docs":[]}],"index":21,"docs":["The `TotalIssuance` was forcefully changed."]}]}},"docs":["The `Event` enum of this pallet"]}},{"id":37,"type":{"path":["frame_support","traits","tokens","misc","BalanceStatus"],"params":[],"def":{"variant":{"variants":[{"name":"Free","fields":[],"index":0,"docs":[]},{"name":"Reserved","fields":[],"index":1,"docs":[]}]}},"docs":[]}},{"id":38,"type":{"path":["pallet_transaction_payment","pallet","Event"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"TransactionFeePaid","fields":[{"name":"who","type":0,"typeName":"T::AccountId","docs":[]},{"name":"actual_fee","type":6,"typeName":"BalanceOf<T>","docs":[]},{"name":"tip","type":6,"typeName":"BalanceOf<T>","docs":[]}],"index":0,"docs":["A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,","has been paid by `who`."]}]}},"docs":["The `Event` enum of this pallet"]}},{"id":39,"type":{"path":["pallet_sudo","pallet","Event"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"Sudid","fields":[{"name":"sudo_result","type":40,"typeName":"DispatchResult","docs":["The result of the call made by the sudo user."]}],"index":0,"docs":["A sudo call just took place."]},{"name":"KeyChanged","fields":[{"name":"old","type":42,"typeName":"Option<T::AccountId>","docs":["The old sudo key (if one was previously set)."]},{"name":"new","type":0,"typeName":"T::AccountId","docs":["The new sudo key (if one was set)."]}],"index":1,"docs":["The sudo key has been updated."]},{"name":"KeyRemoved","fields":[],"index":2,"docs":["The key was permanently removed."]},{"name":"SudoAsDone","fields":[{"name":"sudo_result","type":40,"typeName":"DispatchResult","docs":["The result of the call made by the sudo user."]}],"index":3,"docs":["A [sudo_as](Pallet::sudo_as) call just took place."]}]}},"docs":["The `Event` enum of this pallet"]}},{"id":40,"type":{"path":["Result"],"params":[{"name":"T","type":41},{"name":"E","type":26}],"def":{"variant":{"variants":[{"name":"Ok","fields":[{"name":null,"type":41,"typeName":null,"docs":[]}],"index":0,"docs":[]},{"name":"Err","fields":[{"name":null,"type":26,"typeName":null,"docs":[]}],"index":1,"docs":[]}]}},"docs":[]}},{"id":41,"type":{"path":[],"params":[],"def":{"tuple":[]},"docs":[]}},{"id":42,"type":{"path":["Option"],"params":[{"name":"T","type":0}],"def":{"variant":{"variants":[{"name":"None","fields":[],"index":0,"docs":[]},{"name":"Some","fields":[{"name":null,"type":0,"typeName":null,"docs":[]}],"index":1,"docs":[]}]}},"docs":[]}},{"id":43,"type":{"path":["pallet_template","pallet","Event"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"SomethingStored","fields":[{"name":"something","type":4,"typeName":"u32","docs":["The new value set."]},{"name":"who","type":0,"typeName":"T::AccountId","docs":["The account who set the new value."]}],"index":0,"docs":["A user has successfully set a new value."]}]}},"docs":["Events that functions in this pallet can emit.","","Events are a simple means of indicating to the outside world (such as dApps, chain explorers","or other users) that some notable update in the runtime has occurred. In a FRAME pallet, the","documentation for each event field and its parameters is added to a node's metadata so it","can be used by external interfaces or tools.","","\tThe `generate_deposit` macro generates a function on `Pallet` called `deposit_event` which","will convert the event type of your pallet into `RuntimeEvent` (declared in the pallet's","[`Config`] trait) and deposit it using [`frame_system::Pallet::deposit_event`]."]}},{"id":44,"type":{"path":["frame_system","Phase"],"params":[],"def":{"variant":{"variants":[{"name":"ApplyExtrinsic","fields":[{"name":null,"type":4,"typeName":"u32","docs":[]}],"index":0,"docs":[]},{"name":"Finalization","fields":[],"index":1,"docs":[]},{"name":"Initialization","fields":[],"index":2,"docs":[]}]}},"docs":[]}},{"id":45,"type":{"path":[],"params":[],"def":{"sequence":{"type":13}},"docs":[]}},{"id":46,"type":{"path":[],"params":[],"def":{"sequence":{"type":47}},"docs":[]}},{"id":47,"type":{"path":[],"params":[],"def":{"tuple":[4,4]},"docs":[]}},{"id":48,"type":{"path":["frame_system","LastRuntimeUpgradeInfo"],"params":[],"def":{"composite":{"fields":[{"name":"spec_version","type":49,"typeName":"codec::Compact<u32>","docs":[]},{"name":"spec_name","type":50,"typeName":"sp_runtime::RuntimeString","docs":[]}]}},"docs":[]}},{"id":49,"type":{"path":[],"params":[],"def":{"compact":{"type":4}},"docs":[]}},{"id":50,"type":{"path":[],"params":[],"def":{"primitive":"Str"},"docs":[]}},{"id":51,"type":{"path":["frame_system","CodeUpgradeAuthorization"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[{"name":"code_hash","type":13,"typeName":"T::Hash","docs":[]},{"name":"check_version","type":8,"typeName":"bool","docs":[]}]}},"docs":[]}},{"id":52,"type":{"path":["frame_system","pallet","Call"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"remark","fields":[{"name":"remark","type":14,"typeName":"Vec<u8>","docs":[]}],"index":0,"docs":["Make some on-chain remark.","","Can be executed by every `origin`."]},{"name":"set_heap_pages","fields":[{"name":"pages","type":12,"typeName":"u64","docs":[]}],"index":1,"docs":["Set the number of pages in the WebAssembly environment's heap."]},{"name":"set_code","fields":[{"name":"code","type":14,"typeName":"Vec<u8>","docs":[]}],"index":2,"docs":["Set the new runtime code."]},{"name":"set_code_without_checks","fields":[{"name":"code","type":14,"typeName":"Vec<u8>","docs":[]}],"index":3,"docs":["Set the new runtime code without doing any checks of the given `code`.","","Note that runtime upgrades will not run if this is called with a not-increasing spec","version!"]},{"name":"set_storage","fields":[{"name":"items","type":53,"typeName":"Vec<KeyValue>","docs":[]}],"index":4,"docs":["Set some items of storage."]},{"name":"kill_storage","fields":[{"name":"keys","type":55,"typeName":"Vec<Key>","docs":[]}],"index":5,"docs":["Kill some items from storage."]},{"name":"kill_prefix","fields":[{"name":"prefix","type":14,"typeName":"Key","docs":[]},{"name":"subkeys","type":4,"typeName":"u32","docs":[]}],"index":6,"docs":["Kill all storage items with a key that starts with the given prefix.","","**NOTE:** We rely on the Root origin to provide us the number of subkeys under","the prefix we are removing to accurately calculate the weight of this function."]},{"name":"remark_with_event","fields":[{"name":"remark","type":14,"typeName":"Vec<u8>","docs":[]}],"index":7,"docs":["Make some on-chain remark and emit event."]},{"name":"authorize_upgrade","fields":[{"name":"code_hash","type":13,"typeName":"T::Hash","docs":[]}],"index":9,"docs":["Authorize an upgrade to a given `code_hash` for the runtime. The runtime can be supplied","later.","","This call requires Root origin."]},{"name":"authorize_upgrade_without_checks","fields":[{"name":"code_hash","type":13,"typeName":"T::Hash","docs":[]}],"index":10,"docs":["Authorize an upgrade to a given `code_hash` for the runtime. The runtime can be supplied","later.","","WARNING: This authorizes an upgrade that will take place without any safety checks, for","example that the spec name remains the same and that the version number increases. Not","recommended for normal use. Use `authorize_upgrade` instead.","","This call requires Root origin."]},{"name":"apply_authorized_upgrade","fields":[{"name":"code","type":14,"typeName":"Vec<u8>","docs":[]}],"index":11,"docs":["Provide the preimage (runtime binary) `code` for an upgrade that has been authorized.","","If the authorization required a version check, this call will ensure the spec name","remains unchanged and that the spec version has increased.","","Depending on the runtime's `OnSetCode` configuration, this function may directly apply","the new `code` in the same block or attempt to schedule the upgrade.","","All origins are allowed."]}]}},"docs":["Contains a variant per dispatchable extrinsic that this pallet has."]}},{"id":53,"type":{"path":[],"params":[],"def":{"sequence":{"type":54}},"docs":[]}},{"id":54,"type":{"path":[],"params":[],"def":{"tuple":[14,14]},"docs":[]}},{"id":55,"type":{"path":[],"params":[],"def":{"sequence":{"type":14}},"docs":[]}},{"id":56,"type":{"path":["frame_system","limits","BlockWeights"],"params":[],"def":{"composite":{"fields":[{"name":"base_block","type":10,"typeName":"Weight","docs":[]},{"name":"max_block","type":10,"typeName":"Weight","docs":[]},{"name":"per_class","type":57,"typeName":"PerDispatchClass<WeightsPerClass>","docs":[]}]}},"docs":[]}},{"id":57,"type":{"path":["frame_support","dispatch","PerDispatchClass"],"params":[{"name":"T","type":58}],"def":{"composite":{"fields":[{"name":"normal","type":58,"typeName":"T","docs":[]},{"name":"operational","type":58,"typeName":"T","docs":[]},{"name":"mandatory","type":58,"typeName":"T","docs":[]}]}},"docs":[]}},{"id":58,"type":{"path":["frame_system","limits","WeightsPerClass"],"params":[],"def":{"composite":{"fields":[{"name":"base_extrinsic","type":10,"typeName":"Weight","docs":[]},{"name":"max_extrinsic","type":59,"typeName":"Option<Weight>","docs":[]},{"name":"max_total","type":59,"typeName":"Option<Weight>","docs":[]},{"name":"reserved","type":59,"typeName":"Option<Weight>","docs":[]}]}},"docs":[]}},{"id":59,"type":{"path":["Option"],"params":[{"name":"T","type":10}],"def":{"variant":{"variants":[{"name":"None","fields":[],"index":0,"docs":[]},{"name":"Some","fields":[{"name":null,"type":10,"typeName":null,"docs":[]}],"index":1,"docs":[]}]}},"docs":[]}},{"id":60,"type":{"path":["frame_system","limits","BlockLength"],"params":[],"def":{"composite":{"fields":[{"name":"max","type":61,"typeName":"PerDispatchClass<u32>","docs":[]}]}},"docs":[]}},{"id":61,"type":{"path":["frame_support","dispatch","PerDispatchClass"],"params":[{"name":"T","type":4}],"def":{"composite":{"fields":[{"name":"normal","type":4,"typeName":"T","docs":[]},{"name":"operational","type":4,"typeName":"T","docs":[]},{"name":"mandatory","type":4,"typeName":"T","docs":[]}]}},"docs":[]}},{"id":62,"type":{"path":["sp_weights","RuntimeDbWeight"],"params":[],"def":{"composite":{"fields":[{"name":"read","type":12,"typeName":"u64","docs":[]},{"name":"write","type":12,"typeName":"u64","docs":[]}]}},"docs":[]}},{"id":63,"type":{"path":["sp_version","RuntimeVersion"],"params":[],"def":{"composite":{"fields":[{"name":"spec_name","type":50,"typeName":"RuntimeString","docs":[]},{"name":"impl_name","type":50,"typeName":"RuntimeString","docs":[]},{"name":"authoring_version","type":4,"typeName":"u32","docs":[]},{"name":"spec_version","type":4,"typeName":"u32","docs":[]},{"name":"impl_version","type":4,"typeName":"u32","docs":[]},{"name":"apis","type":64,"typeName":"ApisVec","docs":[]},{"name":"transaction_version","type":4,"typeName":"u32","docs":[]},{"name":"state_version","type":2,"typeName":"u8","docs":[]}]}},"docs":[]}},{"id":64,"type":{"path":["Cow"],"params":[{"name":"T","type":65}],"def":{"composite":{"fields":[{"name":null,"type":65,"typeName":null,"docs":[]}]}},"docs":[]}},{"id":65,"type":{"path":[],"params":[],"def":{"sequence":{"type":66}},"docs":[]}},{"id":66,"type":{"path":[],"params":[],"def":{"tuple":[67,4]},"docs":[]}},{"id":67,"type":{"path":[],"params":[],"def":{"array":{"len":8,"type":2}},"docs":[]}},{"id":68,"type":{"path":[],"params":[],"def":{"primitive":"U16"},"docs":[]}},{"id":69,"type":{"path":["frame_system","pallet","Error"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"InvalidSpecName","fields":[],"index":0,"docs":["The name of specification does not match between the current runtime","and the new runtime."]},{"name":"SpecVersionNeedsToIncrease","fields":[],"index":1,"docs":["The specification version is not allowed to decrease between the current runtime","and the new runtime."]},{"name":"FailedToExtractRuntimeVersion","fields":[],"index":2,"docs":["Failed to extract the runtime version from the new runtime.","","Either calling `Core_version` or decoding `RuntimeVersion` failed."]},{"name":"NonDefaultComposite","fields":[],"index":3,"docs":["Suicide called when the account has non-default composite data."]},{"name":"NonZeroRefCount","fields":[],"index":4,"docs":["There is a non-zero reference count preventing the account from being purged."]},{"name":"CallFiltered","fields":[],"index":5,"docs":["The origin filter prevent the call to be dispatched."]},{"name":"MultiBlockMigrationsOngoing","fields":[],"index":6,"docs":["A multi-block migration is ongoing and prevents the current code from being replaced."]},{"name":"NothingAuthorized","fields":[],"index":7,"docs":["No upgrade authorized."]},{"name":"Unauthorized","fields":[],"index":8,"docs":["The submitted code is not authorized."]}]}},"docs":["Error for the System pallet"]}},{"id":70,"type":{"path":["pallet_timestamp","pallet","Call"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"set","fields":[{"name":"now","type":11,"typeName":"T::Moment","docs":[]}],"index":0,"docs":["Set the current time.","","This call should be invoked exactly once per block. It will panic at the finalization","phase, if this call hasn't been invoked by that time.","","The timestamp should be greater than the previous one by the amount specified by","[`Config::MinimumPeriod`].","","The dispatch origin for this call must be _None_.","","This dispatch class is _Mandatory_ to ensure it gets executed in the block. Be aware","that changing the complexity of this call could result exhausting the resources in a","block to execute any other calls.","","## Complexity","- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)","- 1 storage read and 1 storage mutation (codec `O(1)` because of `DidUpdate::take` in","  `on_finalize`)","- 1 event handler `on_timestamp_set`. Must be `O(1)`."]}]}},"docs":["Contains a variant per dispatchable extrinsic that this pallet has."]}},{"id":71,"type":{"path":["bounded_collections","bounded_vec","BoundedVec"],"params":[{"name":"T","type":72},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":74,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":72,"type":{"path":["sp_consensus_aura","sr25519","app_sr25519","Public"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":73,"typeName":"sr25519::Public","docs":[]}]}},"docs":[]}},{"id":73,"type":{"path":["sp_core","sr25519","Public"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":1,"typeName":"[u8; 32]","docs":[]}]}},"docs":[]}},{"id":74,"type":{"path":[],"params":[],"def":{"sequence":{"type":72}},"docs":[]}},{"id":75,"type":{"path":["sp_consensus_slots","Slot"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":12,"typeName":"u64","docs":[]}]}},"docs":[]}},{"id":76,"type":{"path":["pallet_grandpa","StoredState"],"params":[{"name":"N","type":4}],"def":{"variant":{"variants":[{"name":"Live","fields":[],"index":0,"docs":[]},{"name":"PendingPause","fields":[{"name":"scheduled_at","type":4,"typeName":"N","docs":[]},{"name":"delay","type":4,"typeName":"N","docs":[]}],"index":1,"docs":[]},{"name":"Paused","fields":[],"index":2,"docs":[]},{"name":"PendingResume","fields":[{"name":"scheduled_at","type":4,"typeName":"N","docs":[]},{"name":"delay","type":4,"typeName":"N","docs":[]}],"index":3,"docs":[]}]}},"docs":[]}},{"id":77,"type":{"path":["pallet_grandpa","StoredPendingChange"],"params":[{"name":"N","type":4},{"name":"Limit","type":null}],"def":{"composite":{"fields":[{"name":"scheduled_at","type":4,"typeName":"N","docs":[]},{"name":"delay","type":4,"typeName":"N","docs":[]},{"name":"next_authorities","type":78,"typeName":"BoundedAuthorityList<Limit>","docs":[]},{"name":"forced","type":79,"typeName":"Option<N>","docs":[]}]}},"docs":[]}},{"id":78,"type":{"path":["bounded_collections","weak_bounded_vec","WeakBoundedVec"],"params":[{"name":"T","type":33},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":32,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":79,"type":{"path":["Option"],"params":[{"name":"T","type":4}],"def":{"variant":{"variants":[{"name":"None","fields":[],"index":0,"docs":[]},{"name":"Some","fields":[{"name":null,"type":4,"typeName":null,"docs":[]}],"index":1,"docs":[]}]}},"docs":[]}},{"id":80,"type":{"path":["pallet_grandpa","pallet","Call"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"report_equivocation","fields":[{"name":"equivocation_proof","type":81,"typeName":"Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>","docs":[]},{"name":"key_owner_proof","type":92,"typeName":"T::KeyOwnerProof","docs":[]}],"index":0,"docs":["Report voter equivocation/misbehavior. This method will verify the","equivocation proof and validate the given key ownership proof","against the extracted offender. If both are valid, the offence","will be reported."]},{"name":"report_equivocation_unsigned","fields":[{"name":"equivocation_proof","type":81,"typeName":"Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>","docs":[]},{"name":"key_owner_proof","type":92,"typeName":"T::KeyOwnerProof","docs":[]}],"index":1,"docs":["Report voter equivocation/misbehavior. This method will verify the","equivocation proof and validate the given key ownership proof","against the extracted offender. If both are valid, the offence","will be reported.","","This extrinsic must be called unsigned and it is expected that only","block authors will call it (validated in `ValidateUnsigned`), as such","if the block author is defined it will be defined as the equivocation","reporter."]},{"name":"note_stalled","fields":[{"name":"delay","type":4,"typeName":"BlockNumberFor<T>","docs":[]},{"name":"best_finalized_block_number","type":4,"typeName":"BlockNumberFor<T>","docs":[]}],"index":2,"docs":["Note that the current authority set of the GRANDPA finality gadget has stalled.","","This will trigger a forced authority set change at the beginning of the next session, to","be enacted `delay` blocks after that. The `delay` should be high enough to safely assume","that the block signalling the forced change will not be re-orged e.g. 1000 blocks.","The block production rate (which may be slowed down because of finality lagging) should","be taken into account when choosing the `delay`. The GRANDPA voters based on the new","authority will start voting on top of `best_finalized_block_number` for new finalized","blocks. `best_finalized_block_number` should be the highest of the latest finalized","block of all validators of the new authority set.","","Only callable by root."]}]}},"docs":["Contains a variant per dispatchable extrinsic that this pallet has."]}},{"id":81,"type":{"path":["sp_consensus_grandpa","EquivocationProof"],"params":[{"name":"H","type":13},{"name":"N","type":4}],"def":{"composite":{"fields":[{"name":"set_id","type":12,"typeName":"SetId","docs":[]},{"name":"equivocation","type":82,"typeName":"Equivocation<H, N>","docs":[]}]}},"docs":[]}},{"id":82,"type":{"path":["sp_consensus_grandpa","Equivocation"],"params":[{"name":"H","type":13},{"name":"N","type":4}],"def":{"variant":{"variants":[{"name":"Prevote","fields":[{"name":null,"type":83,"typeName":"grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>","docs":[]}],"index":0,"docs":[]},{"name":"Precommit","fields":[{"name":null,"type":89,"typeName":"grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>","docs":[]}],"index":1,"docs":[]}]}},"docs":[]}},{"id":83,"type":{"path":["finality_grandpa","Equivocation"],"params":[{"name":"Id","type":34},{"name":"V","type":84},{"name":"S","type":85}],"def":{"composite":{"fields":[{"name":"round_number","type":12,"typeName":"u64","docs":[]},{"name":"identity","type":34,"typeName":"Id","docs":[]},{"name":"first","type":88,"typeName":"(V, S)","docs":[]},{"name":"second","type":88,"typeName":"(V, S)","docs":[]}]}},"docs":[]}},{"id":84,"type":{"path":["finality_grandpa","Prevote"],"params":[{"name":"H","type":13},{"name":"N","type":4}],"def":{"composite":{"fields":[{"name":"target_hash","type":13,"typeName":"H","docs":[]},{"name":"target_number","type":4,"typeName":"N","docs":[]}]}},"docs":[]}},{"id":85,"type":{"path":["sp_consensus_grandpa","app","Signature"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":86,"typeName":"ed25519::Signature","docs":[]}]}},"docs":[]}},{"id":86,"type":{"path":["sp_core","ed25519","Signature"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":87,"typeName":"[u8; 64]","docs":[]}]}},"docs":[]}},{"id":87,"type":{"path":[],"params":[],"def":{"array":{"len":64,"type":2}},"docs":[]}},{"id":88,"type":{"path":[],"params":[],"def":{"tuple":[84,85]},"docs":[]}},{"id":89,"type":{"path":["finality_grandpa","Equivocation"],"params":[{"name":"Id","type":34},{"name":"V","type":90},{"name":"S","type":85}],"def":{"composite":{"fields":[{"name":"round_number","type":12,"typeName":"u64","docs":[]},{"name":"identity","type":34,"typeName":"Id","docs":[]},{"name":"first","type":91,"typeName":"(V, S)","docs":[]},{"name":"second","type":91,"typeName":"(V, S)","docs":[]}]}},"docs":[]}},{"id":90,"type":{"path":["finality_grandpa","Precommit"],"params":[{"name":"H","type":13},{"name":"N","type":4}],"def":{"composite":{"fields":[{"name":"target_hash","type":13,"typeName":"H","docs":[]},{"name":"target_number","type":4,"typeName":"N","docs":[]}]}},"docs":[]}},{"id":91,"type":{"path":[],"params":[],"def":{"tuple":[90,85]},"docs":[]}},{"id":92,"type":{"path":["sp_core","Void"],"params":[],"def":{"variant":{"variants":[]}},"docs":[]}},{"id":93,"type":{"path":["pallet_grandpa","pallet","Error"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"PauseFailed","fields":[],"index":0,"docs":["Attempt to signal GRANDPA pause when the authority set isn't live","(either paused or already pending pause)."]},{"name":"ResumeFailed","fields":[],"index":1,"docs":["Attempt to signal GRANDPA resume when the authority set isn't paused","(either live or already pending resume)."]},{"name":"ChangePending","fields":[],"index":2,"docs":["Attempt to signal GRANDPA change with one already pending."]},{"name":"TooSoon","fields":[],"index":3,"docs":["Cannot signal forced change so soon after last."]},{"name":"InvalidKeyOwnershipProof","fields":[],"index":4,"docs":["A key ownership proof provided as part of an equivocation report is invalid."]},{"name":"InvalidEquivocationProof","fields":[],"index":5,"docs":["An equivocation proof provided as part of an equivocation report is invalid."]},{"name":"DuplicateOffenceReport","fields":[],"index":6,"docs":["A given equivocation report is valid but already previously reported."]}]}},"docs":["The `Error` enum of this pallet."]}},{"id":94,"type":{"path":["bounded_collections","weak_bounded_vec","WeakBoundedVec"],"params":[{"name":"T","type":95},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":97,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":95,"type":{"path":["pallet_balances","types","BalanceLock"],"params":[{"name":"Balance","type":6}],"def":{"composite":{"fields":[{"name":"id","type":67,"typeName":"LockIdentifier","docs":[]},{"name":"amount","type":6,"typeName":"Balance","docs":[]},{"name":"reasons","type":96,"typeName":"Reasons","docs":[]}]}},"docs":[]}},{"id":96,"type":{"path":["pallet_balances","types","Reasons"],"params":[],"def":{"variant":{"variants":[{"name":"Fee","fields":[],"index":0,"docs":[]},{"name":"Misc","fields":[],"index":1,"docs":[]},{"name":"All","fields":[],"index":2,"docs":[]}]}},"docs":[]}},{"id":97,"type":{"path":[],"params":[],"def":{"sequence":{"type":95}},"docs":[]}},{"id":98,"type":{"path":["bounded_collections","bounded_vec","BoundedVec"],"params":[{"name":"T","type":99},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":100,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":99,"type":{"path":["pallet_balances","types","ReserveData"],"params":[{"name":"ReserveIdentifier","type":67},{"name":"Balance","type":6}],"def":{"composite":{"fields":[{"name":"id","type":67,"typeName":"ReserveIdentifier","docs":[]},{"name":"amount","type":6,"typeName":"Balance","docs":[]}]}},"docs":[]}},{"id":100,"type":{"path":[],"params":[],"def":{"sequence":{"type":99}},"docs":[]}},{"id":101,"type":{"path":["bounded_collections","bounded_vec","BoundedVec"],"params":[{"name":"T","type":102},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":103,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":102,"type":{"path":["pallet_balances","types","IdAmount"],"params":[{"name":"Id","type":41},{"name":"Balance","type":6}],"def":{"composite":{"fields":[{"name":"id","type":41,"typeName":"Id","docs":[]},{"name":"amount","type":6,"typeName":"Balance","docs":[]}]}},"docs":[]}},{"id":103,"type":{"path":[],"params":[],"def":{"sequence":{"type":102}},"docs":[]}},{"id":104,"type":{"path":["bounded_collections","bounded_vec","BoundedVec"],"params":[{"name":"T","type":102},{"name":"S","type":null}],"def":{"composite":{"fields":[{"name":null,"type":103,"typeName":"Vec<T>","docs":[]}]}},"docs":[]}},{"id":105,"type":{"path":["pallet_balances","pallet","Call"],"params":[{"name":"T","type":null},{"name":"I","type":null}],"def":{"variant":{"variants":[{"name":"transfer_allow_death","fields":[{"name":"dest","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"value","type":109,"typeName":"T::Balance","docs":[]}],"index":0,"docs":["Transfer some liquid free balance to another account.","","`transfer_allow_death` will set the `FreeBalance` of the sender and receiver.","If the sender's account is below the existential deposit as a result","of the transfer, the account will be reaped.","","The dispatch origin for this call must be `Signed` by the transactor."]},{"name":"force_transfer","fields":[{"name":"source","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"dest","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"value","type":109,"typeName":"T::Balance","docs":[]}],"index":2,"docs":["Exactly as `transfer_allow_death`, except the origin must be root and the source account","may be specified."]},{"name":"transfer_keep_alive","fields":[{"name":"dest","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"value","type":109,"typeName":"T::Balance","docs":[]}],"index":3,"docs":["Same as the [`transfer_allow_death`] call, but with a check that the transfer will not","kill the origin account.","","99% of the time you want [`transfer_allow_death`] instead.","","[`transfer_allow_death`]: struct.Pallet.html#method.transfer"]},{"name":"transfer_all","fields":[{"name":"dest","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"keep_alive","type":8,"typeName":"bool","docs":[]}],"index":4,"docs":["Transfer the entire transferable balance from the caller account.","","NOTE: This function only attempts to transfer _transferable_ balances. This means that","any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be","transferred by this function. To ensure that this function results in a killed account,","you might need to prepare the account by removing any reference counters, storage","deposits, etc...","","The dispatch origin of this call must be Signed.","","- `dest`: The recipient of the transfer.","- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all","  of the funds the account has, causing the sender account to be killed (false), or","  transfer everything except at least the existential deposit, which will guarantee to","  keep the sender account alive (true)."]},{"name":"force_unreserve","fields":[{"name":"who","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"amount","type":6,"typeName":"T::Balance","docs":[]}],"index":5,"docs":["Unreserve some balance from a user by force.","","Can only be called by ROOT."]},{"name":"upgrade_accounts","fields":[{"name":"who","type":110,"typeName":"Vec<T::AccountId>","docs":[]}],"index":6,"docs":["Upgrade a specified account.","","- `origin`: Must be `Signed`.","- `who`: The account to be upgraded.","","This will waive the transaction fee if at least all but 10% of the accounts needed to","be upgraded. (We let some not have to be upgraded just in order to allow for the","possibililty of churn)."]},{"name":"force_set_balance","fields":[{"name":"who","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"new_free","type":109,"typeName":"T::Balance","docs":[]}],"index":8,"docs":["Set the regular balance of a given account.","","The dispatch origin for this call is `root`."]},{"name":"force_adjust_total_issuance","fields":[{"name":"direction","type":111,"typeName":"AdjustmentDirection","docs":[]},{"name":"delta","type":109,"typeName":"T::Balance","docs":[]}],"index":9,"docs":["Adjust the total issuance in a saturating way.","","Can only be called by root and always needs a positive `delta`.","","# Example"]}]}},"docs":["Contains a variant per dispatchable extrinsic that this pallet has."]}},{"id":106,"type":{"path":["sp_runtime","multiaddress","MultiAddress"],"params":[{"name":"AccountId","type":0},{"name":"AccountIndex","type":41}],"def":{"variant":{"variants":[{"name":"Id","fields":[{"name":null,"type":0,"typeName":"AccountId","docs":[]}],"index":0,"docs":[]},{"name":"Index","fields":[{"name":null,"type":107,"typeName":"AccountIndex","docs":[]}],"index":1,"docs":[]},{"name":"Raw","fields":[{"name":null,"type":14,"typeName":"Vec<u8>","docs":[]}],"index":2,"docs":[]},{"name":"Address32","fields":[{"name":null,"type":1,"typeName":"[u8; 32]","docs":[]}],"index":3,"docs":[]},{"name":"Address20","fields":[{"name":null,"type":108,"typeName":"[u8; 20]","docs":[]}],"index":4,"docs":[]}]}},"docs":[]}},{"id":107,"type":{"path":[],"params":[],"def":{"compact":{"type":41}},"docs":[]}},{"id":108,"type":{"path":[],"params":[],"def":{"array":{"len":20,"type":2}},"docs":[]}},{"id":109,"type":{"path":[],"params":[],"def":{"compact":{"type":6}},"docs":[]}},{"id":110,"type":{"path":[],"params":[],"def":{"sequence":{"type":0}},"docs":[]}},{"id":111,"type":{"path":["pallet_balances","types","AdjustmentDirection"],"params":[],"def":{"variant":{"variants":[{"name":"Increase","fields":[],"index":0,"docs":[]},{"name":"Decrease","fields":[],"index":1,"docs":[]}]}},"docs":[]}},{"id":112,"type":{"path":["pallet_balances","pallet","Error"],"params":[{"name":"T","type":null},{"name":"I","type":null}],"def":{"variant":{"variants":[{"name":"VestingBalance","fields":[],"index":0,"docs":["Vesting balance too high to send value."]},{"name":"LiquidityRestrictions","fields":[],"index":1,"docs":["Account liquidity restrictions prevent withdrawal."]},{"name":"InsufficientBalance","fields":[],"index":2,"docs":["Balance too low to send value."]},{"name":"ExistentialDeposit","fields":[],"index":3,"docs":["Value too low to create account due to existential deposit."]},{"name":"Expendability","fields":[],"index":4,"docs":["Transfer/payment would kill account."]},{"name":"ExistingVestingSchedule","fields":[],"index":5,"docs":["A vesting schedule already exists for this account."]},{"name":"DeadAccount","fields":[],"index":6,"docs":["Beneficiary account must pre-exist."]},{"name":"TooManyReserves","fields":[],"index":7,"docs":["Number of named reserves exceed `MaxReserves`."]},{"name":"TooManyHolds","fields":[],"index":8,"docs":["Number of holds exceed `VariantCountOf<T::RuntimeHoldReason>`."]},{"name":"TooManyFreezes","fields":[],"index":9,"docs":["Number of freezes exceed `MaxFreezes`."]},{"name":"IssuanceDeactivated","fields":[],"index":10,"docs":["The issuance cannot be modified since it is already deactivated."]},{"name":"DeltaZero","fields":[],"index":11,"docs":["The delta cannot be zero."]}]}},"docs":["The `Error` enum of this pallet."]}},{"id":113,"type":{"path":["sp_arithmetic","fixed_point","FixedU128"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":6,"typeName":"u128","docs":[]}]}},"docs":[]}},{"id":114,"type":{"path":["pallet_transaction_payment","Releases"],"params":[],"def":{"variant":{"variants":[{"name":"V1Ancient","fields":[],"index":0,"docs":[]},{"name":"V2","fields":[],"index":1,"docs":[]}]}},"docs":[]}},{"id":115,"type":{"path":["pallet_sudo","pallet","Call"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"sudo","fields":[{"name":"call","type":116,"typeName":"Box<<T as Config>::RuntimeCall>","docs":[]}],"index":0,"docs":["Authenticates the sudo key and dispatches a function call with `Root` origin."]},{"name":"sudo_unchecked_weight","fields":[{"name":"call","type":116,"typeName":"Box<<T as Config>::RuntimeCall>","docs":[]},{"name":"weight","type":10,"typeName":"Weight","docs":[]}],"index":1,"docs":["Authenticates the sudo key and dispatches a function call with `Root` origin.","This function does not check the weight of the call, and instead allows the","Sudo user to specify the weight of the call.","","The dispatch origin for this call must be _Signed_."]},{"name":"set_key","fields":[{"name":"new","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]}],"index":2,"docs":["Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo","key."]},{"name":"sudo_as","fields":[{"name":"who","type":106,"typeName":"AccountIdLookupOf<T>","docs":[]},{"name":"call","type":116,"typeName":"Box<<T as Config>::RuntimeCall>","docs":[]}],"index":3,"docs":["Authenticates the sudo key and dispatches a function call with `Signed` origin from","a given account.","","The dispatch origin for this call must be _Signed_."]},{"name":"remove_key","fields":[],"index":4,"docs":["Permanently removes the sudo key.","","**This cannot be un-done.**"]}]}},"docs":["Contains a variant per dispatchable extrinsic that this pallet has."]}},{"id":116,"type":{"path":["node_template_runtime","RuntimeCall"],"params":[],"def":{"variant":{"variants":[{"name":"System","fields":[{"name":null,"type":52,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>","docs":[]}],"index":0,"docs":[]},{"name":"Timestamp","fields":[{"name":null,"type":70,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>","docs":[]}],"index":1,"docs":[]},{"name":"Grandpa","fields":[{"name":null,"type":80,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>","docs":[]}],"index":3,"docs":[]},{"name":"Balances","fields":[{"name":null,"type":105,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>","docs":[]}],"index":4,"docs":[]},{"name":"Sudo","fields":[{"name":null,"type":115,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>","docs":[]}],"index":6,"docs":[]},{"name":"TemplateModule","fields":[{"name":null,"type":117,"typeName":"self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TemplateModule, Runtime>","docs":[]}],"index":7,"docs":[]}]}},"docs":[]}},{"id":117,"type":{"path":["pallet_template","pallet","Call"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"do_something","fields":[{"name":"something","type":4,"typeName":"u32","docs":[]}],"index":0,"docs":["An example dispatchable that takes a single u32 value as a parameter, writes the value","to storage and emits an event.","","It checks that the _origin_ for this call is _Signed_ and returns a dispatch","error if it isn't. Learn more about origins here: <https://docs.substrate.io/build/origins/>"]},{"name":"cause_error","fields":[],"index":1,"docs":["An example dispatchable that may throw a custom error.","","It checks that the caller is a signed origin and reads the current value from the","`Something` storage item. If a current value exists, it is incremented by 1 and then","written back to storage.","","## Errors","","The function will return an error under the following conditions:","","- If no value has been set ([`Error::NoneValue`])","- If incrementing the value in storage causes an arithmetic overflow","  ([`Error::StorageOverflow`])"]}]}},"docs":["The pallet's dispatchable functions ([`Call`]s).","","Dispatchable functions allows users to interact with the pallet and invoke state changes.","These functions materialize as \"extrinsics\", which are often compared to transactions.","They must always return a `DispatchResult` and be annotated with a weight and call index.","","The [`call_index`] macro is used to explicitly","define an index for calls in the [`Call`] enum. This is useful for pallets that may","introduce new dispatchables over time. If the order of a dispatchable changes, its index","will also change which will break backwards compatibility.","","The [`weight`] macro is used to assign a weight to each call."]}},{"id":118,"type":{"path":["pallet_sudo","pallet","Error"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"RequireSudo","fields":[],"index":0,"docs":["Sender must be the Sudo account."]}]}},"docs":["Error for the Sudo pallet."]}},{"id":119,"type":{"path":["pallet_template","pallet","Error"],"params":[{"name":"T","type":null}],"def":{"variant":{"variants":[{"name":"NoneValue","fields":[],"index":0,"docs":["The value retrieved was `None` as no value was previously set."]},{"name":"StorageOverflow","fields":[],"index":1,"docs":["There was an attempt to increment the value in storage over `u32::MAX`."]}]}},"docs":["Errors that can be returned by this pallet.","","Errors tell users that something went wrong so it's important that their naming is","informative. Similar to events, error documentation is added to a node's metadata so it's","equally important that they have helpful documentation associated with them.","","This type of runtime error can be up to 4 bytes in size should you want to return additional","information."]}},{"id":120,"type":{"path":["sp_runtime","generic","unchecked_extrinsic","UncheckedExtrinsic"],"params":[{"name":"Address","type":106},{"name":"Call","type":116},{"name":"Signature","type":121},{"name":"Extra","type":125}],"def":{"composite":{"fields":[{"name":null,"type":14,"typeName":null,"docs":[]}]}},"docs":[]}},{"id":121,"type":{"path":["sp_runtime","MultiSignature"],"params":[],"def":{"variant":{"variants":[{"name":"Ed25519","fields":[{"name":null,"type":86,"typeName":"ed25519::Signature","docs":[]}],"index":0,"docs":[]},{"name":"Sr25519","fields":[{"name":null,"type":122,"typeName":"sr25519::Signature","docs":[]}],"index":1,"docs":[]},{"name":"Ecdsa","fields":[{"name":null,"type":123,"typeName":"ecdsa::Signature","docs":[]}],"index":2,"docs":[]}]}},"docs":[]}},{"id":122,"type":{"path":["sp_core","sr25519","Signature"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":87,"typeName":"[u8; 64]","docs":[]}]}},"docs":[]}},{"id":123,"type":{"path":["sp_core","ecdsa","Signature"],"params":[],"def":{"composite":{"fields":[{"name":null,"type":124,"typeName":"[u8; SIGNATURE_SERIALIZED_SIZE]","docs":[]}]}},"docs":[]}},{"id":124,"type":{"path":[],"params":[],"def":{"array":{"len":65,"type":2}},"docs":[]}},{"id":125,"type":{"path":[],"params":[],"def":{"tuple":[126,127,128,129,130,132,133,134]},"docs":[]}},{"id":126,"type":{"path":["frame_system","extensions","check_non_zero_sender","CheckNonZeroSender"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[]}},"docs":[]}},{"id":127,"type":{"path":["frame_system","extensions","check_spec_version","CheckSpecVersion"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[]}},"docs":[]}},{"id":128,"type":{"path":["frame_system","extensions","check_tx_version","CheckTxVersion"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[]}},"docs":[]}},{"id":129,"type":{"path":["frame_system","extensions","check_genesis","CheckGenesis"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[]}},"docs":[]}},{"id":130,"type":{"path":["frame_system","extensions","check_mortality","CheckMortality"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[{"name":null,"type":131,"typeName":"Era","docs":[]}]}},"docs":[]}},{"id":131,"type":{"path":["sp_runtime","generic","era","Era"],"params":[],"def":{"variant":{"variants":[{"name":"Immortal","fields":[],"index":0,"docs":[]},{"name":"Mortal1","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":1,"docs":[]},{"name":"Mortal2","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":2,"docs":[]},{"name":"Mortal3","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":3,"docs":[]},{"name":"Mortal4","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":4,"docs":[]},{"name":"Mortal5","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":5,"docs":[]},{"name":"Mortal6","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":6,"docs":[]},{"name":"Mortal7","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":7,"docs":[]},{"name":"Mortal8","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":8,"docs":[]},{"name":"Mortal9","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":9,"docs":[]},{"name":"Mortal10","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":10,"docs":[]},{"name":"Mortal11","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":11,"docs":[]},{"name":"Mortal12","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":12,"docs":[]},{"name":"Mortal13","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":13,"docs":[]},{"name":"Mortal14","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":14,"docs":[]},{"name":"Mortal15","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":15,"docs":[]},{"name":"Mortal16","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":16,"docs":[]},{"name":"Mortal17","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":17,"docs":[]},{"name":"Mortal18","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":18,"docs":[]},{"name":"Mortal19","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":19,"docs":[]},{"name":"Mortal20","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":20,"docs":[]},{"name":"Mortal21","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":21,"docs":[]},{"name":"Mortal22","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":22,"docs":[]},{"name":"Mortal23","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":23,"docs":[]},{"name":"Mortal24","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":24,"docs":[]},{"name":"Mortal25","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":25,"docs":[]},{"name":"Mortal26","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":26,"docs":[]},{"name":"Mortal27","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":27,"docs":[]},{"name":"Mortal28","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":28,"docs":[]},{"name":"Mortal29","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":29,"docs":[]},{"name":"Mortal30","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":30,"docs":[]},{"name":"Mortal31","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":31,"docs":[]},{"name":"Mortal32","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":32,"docs":[]},{"name":"Mortal33","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":33,"docs":[]},{"name":"Mortal34","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":34,"docs":[]},{"name":"Mortal35","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":35,"docs":[]},{"name":"Mortal36","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":36,"docs":[]},{"name":"Mortal37","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":37,"docs":[]},{"name":"Mortal38","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":38,"docs":[]},{"name":"Mortal39","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":39,"docs":[]},{"name":"Mortal40","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":40,"docs":[]},{"name":"Mortal41","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":41,"docs":[]},{"name":"Mortal42","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":42,"docs":[]},{"name":"Mortal43","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":43,"docs":[]},{"name":"Mortal44","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":44,"docs":[]},{"name":"Mortal45","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":45,"docs":[]},{"name":"Mortal46","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":46,"docs":[]},{"name":"Mortal47","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":47,"docs":[]},{"name":"Mortal48","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":48,"docs":[]},{"name":"Mortal49","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":49,"docs":[]},{"name":"Mortal50","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":50,"docs":[]},{"name":"Mortal51","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":51,"docs":[]},{"name":"Mortal52","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":52,"docs":[]},{"name":"Mortal53","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":53,"docs":[]},{"name":"Mortal54","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":54,"docs":[]},{"name":"Mortal55","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":55,"docs":[]},{"name":"Mortal56","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":56,"docs":[]},{"name":"Mortal57","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":57,"docs":[]},{"name":"Mortal58","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":58,"docs":[]},{"name":"Mortal59","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":59,"docs":[]},{"name":"Mortal60","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":60,"docs":[]},{"name":"Mortal61","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":61,"docs":[]},{"name":"Mortal62","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":62,"docs":[]},{"name":"Mortal63","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":63,"docs":[]},{"name":"Mortal64","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":64,"docs":[]},{"name":"Mortal65","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":65,"docs":[]},{"name":"Mortal66","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":66,"docs":[]},{"name":"Mortal67","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":67,"docs":[]},{"name":"Mortal68","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":68,"docs":[]},{"name":"Mortal69","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":69,"docs":[]},{"name":"Mortal70","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":70,"docs":[]},{"name":"Mortal71","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":71,"docs":[]},{"name":"Mortal72","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":72,"docs":[]},{"name":"Mortal73","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":73,"docs":[]},{"name":"Mortal74","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":74,"docs":[]},{"name":"Mortal75","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":75,"docs":[]},{"name":"Mortal76","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":76,"docs":[]},{"name":"Mortal77","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":77,"docs":[]},{"name":"Mortal78","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":78,"docs":[]},{"name":"Mortal79","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":79,"docs":[]},{"name":"Mortal80","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":80,"docs":[]},{"name":"Mortal81","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":81,"docs":[]},{"name":"Mortal82","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":82,"docs":[]},{"name":"Mortal83","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":83,"docs":[]},{"name":"Mortal84","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":84,"docs":[]},{"name":"Mortal85","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":85,"docs":[]},{"name":"Mortal86","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":86,"docs":[]},{"name":"Mortal87","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":87,"docs":[]},{"name":"Mortal88","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":88,"docs":[]},{"name":"Mortal89","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":89,"docs":[]},{"name":"Mortal90","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":90,"docs":[]},{"name":"Mortal91","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":91,"docs":[]},{"name":"Mortal92","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":92,"docs":[]},{"name":"Mortal93","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":93,"docs":[]},{"name":"Mortal94","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":94,"docs":[]},{"name":"Mortal95","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":95,"docs":[]},{"name":"Mortal96","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":96,"docs":[]},{"name":"Mortal97","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":97,"docs":[]},{"name":"Mortal98","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":98,"docs":[]},{"name":"Mortal99","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":99,"docs":[]},{"name":"Mortal100","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":100,"docs":[]},{"name":"Mortal101","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":101,"docs":[]},{"name":"Mortal102","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":102,"docs":[]},{"name":"Mortal103","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":103,"docs":[]},{"name":"Mortal104","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":104,"docs":[]},{"name":"Mortal105","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":105,"docs":[]},{"name":"Mortal106","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":106,"docs":[]},{"name":"Mortal107","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":107,"docs":[]},{"name":"Mortal108","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":108,"docs":[]},{"name":"Mortal109","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":109,"docs":[]},{"name":"Mortal110","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":110,"docs":[]},{"name":"Mortal111","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":111,"docs":[]},{"name":"Mortal112","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":112,"docs":[]},{"name":"Mortal113","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":113,"docs":[]},{"name":"Mortal114","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":114,"docs":[]},{"name":"Mortal115","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":115,"docs":[]},{"name":"Mortal116","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":116,"docs":[]},{"name":"Mortal117","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":117,"docs":[]},{"name":"Mortal118","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":118,"docs":[]},{"name":"Mortal119","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":119,"docs":[]},{"name":"Mortal120","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":120,"docs":[]},{"name":"Mortal121","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":121,"docs":[]},{"name":"Mortal122","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":122,"docs":[]},{"name":"Mortal123","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":123,"docs":[]},{"name":"Mortal124","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":124,"docs":[]},{"name":"Mortal125","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":125,"docs":[]},{"name":"Mortal126","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":126,"docs":[]},{"name":"Mortal127","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":127,"docs":[]},{"name":"Mortal128","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":128,"docs":[]},{"name":"Mortal129","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":129,"docs":[]},{"name":"Mortal130","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":130,"docs":[]},{"name":"Mortal131","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":131,"docs":[]},{"name":"Mortal132","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":132,"docs":[]},{"name":"Mortal133","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":133,"docs":[]},{"name":"Mortal134","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":134,"docs":[]},{"name":"Mortal135","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":135,"docs":[]},{"name":"Mortal136","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":136,"docs":[]},{"name":"Mortal137","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":137,"docs":[]},{"name":"Mortal138","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":138,"docs":[]},{"name":"Mortal139","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":139,"docs":[]},{"name":"Mortal140","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":140,"docs":[]},{"name":"Mortal141","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":141,"docs":[]},{"name":"Mortal142","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":142,"docs":[]},{"name":"Mortal143","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":143,"docs":[]},{"name":"Mortal144","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":144,"docs":[]},{"name":"Mortal145","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":145,"docs":[]},{"name":"Mortal146","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":146,"docs":[]},{"name":"Mortal147","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":147,"docs":[]},{"name":"Mortal148","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":148,"docs":[]},{"name":"Mortal149","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":149,"docs":[]},{"name":"Mortal150","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":150,"docs":[]},{"name":"Mortal151","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":151,"docs":[]},{"name":"Mortal152","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":152,"docs":[]},{"name":"Mortal153","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":153,"docs":[]},{"name":"Mortal154","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":154,"docs":[]},{"name":"Mortal155","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":155,"docs":[]},{"name":"Mortal156","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":156,"docs":[]},{"name":"Mortal157","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":157,"docs":[]},{"name":"Mortal158","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":158,"docs":[]},{"name":"Mortal159","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":159,"docs":[]},{"name":"Mortal160","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":160,"docs":[]},{"name":"Mortal161","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":161,"docs":[]},{"name":"Mortal162","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":162,"docs":[]},{"name":"Mortal163","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":163,"docs":[]},{"name":"Mortal164","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":164,"docs":[]},{"name":"Mortal165","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":165,"docs":[]},{"name":"Mortal166","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":166,"docs":[]},{"name":"Mortal167","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":167,"docs":[]},{"name":"Mortal168","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":168,"docs":[]},{"name":"Mortal169","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":169,"docs":[]},{"name":"Mortal170","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":170,"docs":[]},{"name":"Mortal171","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":171,"docs":[]},{"name":"Mortal172","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":172,"docs":[]},{"name":"Mortal173","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":173,"docs":[]},{"name":"Mortal174","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":174,"docs":[]},{"name":"Mortal175","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":175,"docs":[]},{"name":"Mortal176","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":176,"docs":[]},{"name":"Mortal177","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":177,"docs":[]},{"name":"Mortal178","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":178,"docs":[]},{"name":"Mortal179","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":179,"docs":[]},{"name":"Mortal180","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":180,"docs":[]},{"name":"Mortal181","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":181,"docs":[]},{"name":"Mortal182","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":182,"docs":[]},{"name":"Mortal183","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":183,"docs":[]},{"name":"Mortal184","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":184,"docs":[]},{"name":"Mortal185","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":185,"docs":[]},{"name":"Mortal186","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":186,"docs":[]},{"name":"Mortal187","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":187,"docs":[]},{"name":"Mortal188","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":188,"docs":[]},{"name":"Mortal189","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":189,"docs":[]},{"name":"Mortal190","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":190,"docs":[]},{"name":"Mortal191","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":191,"docs":[]},{"name":"Mortal192","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":192,"docs":[]},{"name":"Mortal193","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":193,"docs":[]},{"name":"Mortal194","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":194,"docs":[]},{"name":"Mortal195","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":195,"docs":[]},{"name":"Mortal196","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":196,"docs":[]},{"name":"Mortal197","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":197,"docs":[]},{"name":"Mortal198","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":198,"docs":[]},{"name":"Mortal199","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":199,"docs":[]},{"name":"Mortal200","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":200,"docs":[]},{"name":"Mortal201","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":201,"docs":[]},{"name":"Mortal202","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":202,"docs":[]},{"name":"Mortal203","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":203,"docs":[]},{"name":"Mortal204","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":204,"docs":[]},{"name":"Mortal205","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":205,"docs":[]},{"name":"Mortal206","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":206,"docs":[]},{"name":"Mortal207","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":207,"docs":[]},{"name":"Mortal208","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":208,"docs":[]},{"name":"Mortal209","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":209,"docs":[]},{"name":"Mortal210","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":210,"docs":[]},{"name":"Mortal211","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":211,"docs":[]},{"name":"Mortal212","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":212,"docs":[]},{"name":"Mortal213","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":213,"docs":[]},{"name":"Mortal214","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":214,"docs":[]},{"name":"Mortal215","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":215,"docs":[]},{"name":"Mortal216","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":216,"docs":[]},{"name":"Mortal217","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":217,"docs":[]},{"name":"Mortal218","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":218,"docs":[]},{"name":"Mortal219","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":219,"docs":[]},{"name":"Mortal220","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":220,"docs":[]},{"name":"Mortal221","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":221,"docs":[]},{"name":"Mortal222","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":222,"docs":[]},{"name":"Mortal223","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":223,"docs":[]},{"name":"Mortal224","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":224,"docs":[]},{"name":"Mortal225","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":225,"docs":[]},{"name":"Mortal226","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":226,"docs":[]},{"name":"Mortal227","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":227,"docs":[]},{"name":"Mortal228","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":228,"docs":[]},{"name":"Mortal229","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":229,"docs":[]},{"name":"Mortal230","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":230,"docs":[]},{"name":"Mortal231","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":231,"docs":[]},{"name":"Mortal232","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":232,"docs":[]},{"name":"Mortal233","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":233,"docs":[]},{"name":"Mortal234","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":234,"docs":[]},{"name":"Mortal235","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":235,"docs":[]},{"name":"Mortal236","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":236,"docs":[]},{"name":"Mortal237","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":237,"docs":[]},{"name":"Mortal238","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":238,"docs":[]},{"name":"Mortal239","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":239,"docs":[]},{"name":"Mortal240","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":240,"docs":[]},{"name":"Mortal241","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":241,"docs":[]},{"name":"Mortal242","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":242,"docs":[]},{"name":"Mortal243","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":243,"docs":[]},{"name":"Mortal244","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":244,"docs":[]},{"name":"Mortal245","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":245,"docs":[]},{"name":"Mortal246","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":246,"docs":[]},{"name":"Mortal247","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":247,"docs":[]},{"name":"Mortal248","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":248,"docs":[]},{"name":"Mortal249","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":249,"docs":[]},{"name":"Mortal250","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":250,"docs":[]},{"name":"Mortal251","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":251,"docs":[]},{"name":"Mortal252","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":252,"docs":[]},{"name":"Mortal253","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":253,"docs":[]},{"name":"Mortal254","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":254,"docs":[]},{"name":"Mortal255","fields":[{"name":null,"type":2,"typeName":null,"docs":[]}],"index":255,"docs":[]}]}},"docs":[]}},{"id":132,"type":{"path":["frame_system","extensions","check_nonce","CheckNonce"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[{"name":null,"type":49,"typeName":"T::Nonce","docs":[]}]}},"docs":[]}},{"id":133,"type":{"path":["frame_system","extensions","check_weight","CheckWeight"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[]}},"docs":[]}},{"id":134,"type":{"path":["pallet_transaction_payment","ChargeTransactionPayment"],"params":[{"name":"T","type":null}],"def":{"composite":{"fields":[{"name":null,"type":109,"typeName":"BalanceOf<T>","docs":[]}]}},"docs":[]}},{"id":135,"type":{"path":["node_template_runtime","Runtime"],"params":[],"def":{"composite":{"fields":[]}},"docs":[]}}]},"pallets":[{"name":"System","storage":{"prefix":"System","items":[{"name":"Account","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":3}},"fallback":"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080","docs":[" The full account information for a particular account ID."]},{"name":"ExtrinsicCount","modifier":"Optional","type":{"plain":4},"fallback":"0x00","docs":[" Total extrinsics count for the current block."]},{"name":"InherentsApplied","modifier":"Default","type":{"plain":8},"fallback":"0x00","docs":[" Whether all inherents have been applied."]},{"name":"BlockWeight","modifier":"Default","type":{"plain":9},"fallback":"0x000000000000","docs":[" The current weight for the block."]},{"name":"AllExtrinsicsLen","modifier":"Optional","type":{"plain":4},"fallback":"0x00","docs":[" Total length (in bytes) for all extrinsics put together, for the current block."]},{"name":"BlockHash","modifier":"Default","type":{"map":{"hashers":["Twox64Concat"],"key":4,"value":13}},"fallback":"0x0000000000000000000000000000000000000000000000000000000000000000","docs":[" Map of block numbers to block hashes."]},{"name":"ExtrinsicData","modifier":"Default","type":{"map":{"hashers":["Twox64Concat"],"key":4,"value":14}},"fallback":"0x00","docs":[" Extrinsics data for the current block (maps an extrinsic's index to its data)."]},{"name":"Number","modifier":"Default","type":{"plain":4},"fallback":"0x00000000","docs":[" The current block number being processed. Set by `execute_block`."]},{"name":"ParentHash","modifier":"Default","type":{"plain":13},"fallback":"0x0000000000000000000000000000000000000000000000000000000000000000","docs":[" Hash of the previous block."]},{"name":"Digest","modifier":"Default","type":{"plain":15},"fallback":"0x00","docs":[" Digest of the current block, also part of the block header."]},{"name":"Events","modifier":"Default","type":{"plain":19},"fallback":"0x00","docs":[" Events deposited for the current block.",""," NOTE: The item is unbound and should therefore never be read on chain."," It could otherwise inflate the PoV size of a block.",""," Events have a large in-memory size. Box the events to not go out-of-memory"," just in case someone still reads them from within the runtime."]},{"name":"EventCount","modifier":"Default","type":{"plain":4},"fallback":"0x00000000","docs":[" The number of events in the `Events<T>` list."]},{"name":"EventTopics","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":13,"value":46}},"fallback":"0x00","docs":[" Mapping between a topic (represented by T::Hash) and a vector of indexes"," of events in the `<Events<T>>` list.",""," All topic vectors have deterministic storage locations depending on the topic. This"," allows light-clients to leverage the changes trie storage tracking mechanism and"," in case of changes fetch the list of events of interest.",""," The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just"," the `EventIndex` then in case if the topic has the same contents on the next block"," no notification will be triggered thus the event might be lost."]},{"name":"LastRuntimeUpgrade","modifier":"Optional","type":{"plain":48},"fallback":"0x00","docs":[" Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."]},{"name":"UpgradedToU32RefCount","modifier":"Default","type":{"plain":8},"fallback":"0x00","docs":[" True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."]},{"name":"UpgradedToTripleRefCount","modifier":"Default","type":{"plain":8},"fallback":"0x00","docs":[" True if we have upgraded so that AccountInfo contains three types of `RefCount`. False"," (default) if not."]},{"name":"ExecutionPhase","modifier":"Optional","type":{"plain":44},"fallback":"0x00","docs":[" The execution phase of the block."]},{"name":"AuthorizedUpgrade","modifier":"Optional","type":{"plain":51},"fallback":"0x00","docs":[" `Some` if a code upgrade has been authorized."]}]},"calls":{"type":52},"events":{"type":22},"constants":[{"name":"BlockWeights","type":56,"value":"0x025b1f5d000b00204aa9d10113ffffffffffffffffc2a0a91d00010bd05f9fa62e011366666666666666a6010b0098f73e5d0113ffffffffffffffbf010000c2a0a91d00010bd0e7f110a3011366666666666666e6010b00204aa9d10113ffffffffffffffff01070088526a74130000000000000040c2a0a91d00000000","docs":[" Block & extrinsics weights: base values and limits."]},{"name":"BlockLength","type":60,"value":"0x00003c000000500000005000","docs":[" The maximum length of a block (in bytes)."]},{"name":"BlockHashCount","type":4,"value":"0x60090000","docs":[" Maximum number of block number to block hash mappings to keep (oldest pruned first)."]},{"name":"DbWeight","type":62,"value":"0x40787d010000000000e1f50500000000","docs":[" The weight of runtime database operations the runtime can invoke."]},{"name":"Version","type":63,"value":"0x68736f6c6f636861696e2d74656d706c6174652d72756e74696d6568736f6c6f636861696e2d74656d706c6174652d72756e74696d6501000000640000000100000030df6acb689907609b0500000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000dd718d5cc53262d401000000ab3c0572291feb8b01000000ed99c5acb25eedf503000000bc9d89904f5b923f0100000037c8bb1350a9a2a804000000f3ff14d5ab52705903000000fbc577b9d747efd6010000000100000001","docs":[" Get the chain's in-code version."]},{"name":"SS58Prefix","type":68,"value":"0x2a00","docs":[" The designated SS58 prefix of this chain.",""," This replaces the \"ss58Format\" property declared in the chain spec. Reason is"," that the runtime should know about the prefix in order to make use of it as"," an identifier of the chain."]}],"errors":{"type":69},"index":0},{"name":"Timestamp","storage":{"prefix":"Timestamp","items":[{"name":"Now","modifier":"Default","type":{"plain":12},"fallback":"0x0000000000000000","docs":[" The current time for the current block."]},{"name":"DidUpdate","modifier":"Default","type":{"plain":8},"fallback":"0x00","docs":[" Whether the timestamp has been updated in this block.",""," This value is updated to `true` upon successful submission of a timestamp by a node."," It is then checked at the end of each block execution in the `on_finalize` hook."]}]},"calls":{"type":70},"events":null,"constants":[{"name":"MinimumPeriod","type":12,"value":"0xb80b000000000000","docs":[" The minimum period between blocks.",""," Be aware that this is different to the *expected* period that the block production"," apparatus provides. Your chosen consensus system will generally work with this to"," determine a sensible block time. For example, in the Aura pallet it will be double this"," period on default settings."]}],"errors":null,"index":1},{"name":"Aura","storage":{"prefix":"Aura","items":[{"name":"Authorities","modifier":"Default","type":{"plain":71},"fallback":"0x00","docs":[" The current authority set."]},{"name":"CurrentSlot","modifier":"Default","type":{"plain":75},"fallback":"0x0000000000000000","docs":[" The current slot of this block.",""," This will be set in `on_initialize`."]}]},"calls":null,"events":null,"constants":[],"errors":null,"index":2},{"name":"Grandpa","storage":{"prefix":"Grandpa","items":[{"name":"State","modifier":"Default","type":{"plain":76},"fallback":"0x00","docs":[" State of the current authority set."]},{"name":"PendingChange","modifier":"Optional","type":{"plain":77},"fallback":"0x00","docs":[" Pending change: (signaled at, scheduled change)."]},{"name":"NextForced","modifier":"Optional","type":{"plain":4},"fallback":"0x00","docs":[" next block number where we can force a change."]},{"name":"Stalled","modifier":"Optional","type":{"plain":47},"fallback":"0x00","docs":[" `true` if we are currently stalled."]},{"name":"CurrentSetId","modifier":"Default","type":{"plain":12},"fallback":"0x0000000000000000","docs":[" The number of changes (both in terms of keys and underlying economic responsibilities)"," in the \"set\" of Grandpa validators from genesis."]},{"name":"SetIdSession","modifier":"Optional","type":{"map":{"hashers":["Twox64Concat"],"key":12,"value":4}},"fallback":"0x00","docs":[" A mapping from grandpa set ID to the index of the *most recent* session for which its"," members were responsible.",""," This is only used for validating equivocation proofs. An equivocation proof must"," contains a key-ownership proof for a given session, therefore we need a way to tie"," together sessions and GRANDPA set ids, i.e. we need to validate that a validator"," was the owner of a given key on a given session, and what the active set ID was"," during that session.",""," TWOX-NOTE: `SetId` is not under user control."]},{"name":"Authorities","modifier":"Default","type":{"plain":78},"fallback":"0x00","docs":[" The current list of authorities."]}]},"calls":{"type":80},"events":{"type":31},"constants":[{"name":"MaxAuthorities","type":4,"value":"0x20000000","docs":[" Max Authorities in use"]},{"name":"MaxNominators","type":4,"value":"0x00000000","docs":[" The maximum number of nominators for each validator."]},{"name":"MaxSetIdSessionEntries","type":12,"value":"0x0000000000000000","docs":[" The maximum number of entries to keep in the set id to session index mapping.",""," Since the `SetIdSession` map is only used for validating equivocations this"," value should relate to the bonding duration of whatever staking system is"," being used (if any). If equivocation handling is not enabled then this value"," can be zero."]}],"errors":{"type":93},"index":3},{"name":"Balances","storage":{"prefix":"Balances","items":[{"name":"TotalIssuance","modifier":"Default","type":{"plain":6},"fallback":"0x00000000000000000000000000000000","docs":[" The total units issued in the system."]},{"name":"InactiveIssuance","modifier":"Default","type":{"plain":6},"fallback":"0x00000000000000000000000000000000","docs":[" The total units of outstanding deactivated balance in the system."]},{"name":"Account","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":5}},"fallback":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080","docs":[" The Balances pallet example of storing the balance of an account.",""," # Example",""," ```nocompile","  impl pallet_balances::Config for Runtime {","    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>","  }"," ```",""," You can also store the balance of an account in the `System` pallet.",""," # Example",""," ```nocompile","  impl pallet_balances::Config for Runtime {","   type AccountStore = System","  }"," ```",""," But this comes with tradeoffs, storing account balances in the system pallet stores"," `frame_system` data alongside the account data contrary to storing account balances in the"," `Balances` pallet, which uses a `StorageMap` to store balances data only."," NOTE: This is only used in the case that this pallet is used to store balances."]},{"name":"Locks","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":94}},"fallback":"0x00","docs":[" Any liquidity locks on some account balances."," NOTE: Should only be accessed when setting, changing and freeing a lock."]},{"name":"Reserves","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":98}},"fallback":"0x00","docs":[" Named reserves on some account balances."]},{"name":"Holds","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":101}},"fallback":"0x00","docs":[" Holds on account balances."]},{"name":"Freezes","modifier":"Default","type":{"map":{"hashers":["Blake2_128Concat"],"key":0,"value":104}},"fallback":"0x00","docs":[" Freeze locks on account balances."]}]},"calls":{"type":105},"events":{"type":36},"constants":[{"name":"ExistentialDeposit","type":6,"value":"0xf4010000000000000000000000000000","docs":[" The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",""," If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for"," this pallet. However, you do so at your own risk: this will open up a major DoS vector."," In case you have multiple sources of provider references, you may also get unexpected"," behaviour if you set this to zero.",""," Bottom line: Do yourself a favour and make it at least one!"]},{"name":"MaxLocks","type":4,"value":"0x32000000","docs":[" The maximum number of locks that should exist on an account."," Not strictly enforced, but used for weight estimation."]},{"name":"MaxReserves","type":4,"value":"0x00000000","docs":[" The maximum number of named reserves that can exist on an account."]},{"name":"MaxFreezes","type":4,"value":"0x00000000","docs":[" The maximum number of individual freeze locks that can exist on an account at any time."]}],"errors":{"type":112},"index":4},{"name":"TransactionPayment","storage":{"prefix":"TransactionPayment","items":[{"name":"NextFeeMultiplier","modifier":"Default","type":{"plain":113},"fallback":"0x000064a7b3b6e00d0000000000000000","docs":[]},{"name":"StorageVersion","modifier":"Default","type":{"plain":114},"fallback":"0x00","docs":[]}]},"calls":null,"events":{"type":38},"constants":[{"name":"OperationalFeeMultiplier","type":2,"value":"0x05","docs":[" A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their"," `priority`",""," This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later"," added to a tip component in regular `priority` calculations."," It means that a `Normal` transaction can front-run a similarly-sized `Operational`"," extrinsic (with no tip), by including a tip value greater than the virtual tip.",""," ```rust,ignore"," // For `Normal`"," let priority = priority_calc(tip);",""," // For `Operational`"," let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;"," let priority = priority_calc(tip + virtual_tip);"," ```",""," Note that since we use `final_fee` the multiplier applies also to the regular `tip`"," sent with the transaction. So, not only does the transaction get a priority bump based"," on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`"," transactions."]}],"errors":null,"index":5},{"name":"Sudo","storage":{"prefix":"Sudo","items":[{"name":"Key","modifier":"Optional","type":{"plain":0},"fallback":"0x00","docs":[" The `AccountId` of the sudo key."]}]},"calls":{"type":115},"events":{"type":39},"constants":[],"errors":{"type":118},"index":6},{"name":"TemplateModule","storage":{"prefix":"TemplateModule","items":[{"name":"Something","modifier":"Optional","type":{"plain":4},"fallback":"0x00","docs":[" A storage item for this pallet.",""," In this template, we are declaring a storage item called `Something` that stores a single"," `u32` value. Learn more about runtime storage here: <https://docs.substrate.io/build/runtime-storage/>"]}]},"calls":{"type":117},"events":{"type":43},"constants":[],"errors":{"type":119},"index":7}],"extrinsic":{"type":120,"version":4,"signedExtensions":[{"identifier":"CheckNonZeroSender","type":126,"additionalSigned":41},{"identifier":"CheckSpecVersion","type":127,"additionalSigned":4},{"identifier":"CheckTxVersion","type":128,"additionalSigned":4},{"identifier":"CheckGenesis","type":129,"additionalSigned":13},{"identifier":"CheckMortality","type":130,"additionalSigned":13},{"identifier":"CheckNonce","type":132,"additionalSigned":41},{"identifier":"CheckWeight","type":133,"additionalSigned":41},{"identifier":"ChargeTransactionPayment","type":134,"additionalSigned":41}]},"type":135}}}